//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AnimControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AnimController), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("getCurrentPlayCount", getCurrentPlayCount);
		L.RegFunction("playAnim", playAnim);
		L.RegFunction("unLoadResource", unLoadResource);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("unity_animation", get_unity_animation, set_unity_animation);
		L.RegVar("anim_asset_path", get_anim_asset_path, set_anim_asset_path);
		L.RegVar("loaded_anims", get_loaded_anims, set_loaded_anims);
		L.RegVar("current_anim_name", get_current_anim_name, set_current_anim_name);
		L.RegVar("wrap_mode", get_wrap_mode, set_wrap_mode);
		L.RegVar("localRewind", get_localRewind, set_localRewind);
		L.RegVar("play_count", get_play_count, set_play_count);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			AnimController obj = (AnimController)ToLua.CheckObject(L, 1, typeof(AnimController));
			UnityEngine.Animation arg0 = (UnityEngine.Animation)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Animation));
			string arg1 = ToLua.CheckString(L, 3);
			obj.Init(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getCurrentPlayCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimController obj = (AnimController)ToLua.CheckObject(L, 1, typeof(AnimController));
			int o = obj.getCurrentPlayCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int playAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			AnimController obj = (AnimController)ToLua.CheckObject(L, 1, typeof(AnimController));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.WrapMode arg1 = (UnityEngine.WrapMode)ToLua.CheckObject(L, 3, typeof(UnityEngine.WrapMode));
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			int o = obj.playAnim(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int unLoadResource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimController obj = (AnimController)ToLua.CheckObject(L, 1, typeof(AnimController));
			obj.unLoadResource();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_unity_animation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			UnityEngine.Animation ret = obj.unity_animation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index unity_animation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_anim_asset_path(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			string ret = obj.anim_asset_path;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index anim_asset_path on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_loaded_anims(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			System.Collections.Generic.Dictionary<string,string> ret = obj.loaded_anims;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index loaded_anims on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_current_anim_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			string ret = obj.current_anim_name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index current_anim_name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_wrap_mode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			UnityEngine.WrapMode ret = obj.wrap_mode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index wrap_mode on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_localRewind(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			bool ret = obj.localRewind;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index localRewind on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_play_count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			int ret = obj.play_count;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index play_count on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_unity_animation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			UnityEngine.Animation arg0 = (UnityEngine.Animation)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Animation));
			obj.unity_animation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index unity_animation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_anim_asset_path(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.anim_asset_path = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index anim_asset_path on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_loaded_anims(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			System.Collections.Generic.Dictionary<string,string> arg0 = (System.Collections.Generic.Dictionary<string,string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,string>));
			obj.loaded_anims = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index loaded_anims on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_current_anim_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.current_anim_name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index current_anim_name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_wrap_mode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			UnityEngine.WrapMode arg0 = (UnityEngine.WrapMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.WrapMode));
			obj.wrap_mode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index wrap_mode on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_localRewind(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.localRewind = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index localRewind on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_play_count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimController obj = (AnimController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.play_count = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index play_count on a nil value" : e.Message);
		}
	}
}

