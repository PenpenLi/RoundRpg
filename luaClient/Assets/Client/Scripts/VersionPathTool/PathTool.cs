// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.IO;


public class PathTool
{
	public PathTool ()
	{
	}

	public static string VersionFilePath{
		get {
			return ResDataPath+"/version.txt";
		}
	}

//	public static string CurrentVersionLuaABPath{
//		get{
//			return CurrentVersionStaticResDataPath + "/lua.ab";
//		}
//	}


	//当前版本静态资源目录
	public static string CurrentVersionStaticResDataPath{
		get {
			return ResDataPath + "/" + AssetFileTool.staticMainFest + "/" + VersionTool.Instance.currentVersionCell.AppCode;
		}
	}

	//更新版本静态资源临时保存目录
	public static string  NewVersionStaticReDataPath{
		get {
			return ResDataPath+"/"+AssetFileTool.staticMainFest+"/tmp/";
		}
	}

	//当前版本动态资源目录
	public static string CurrentVersionDynamicResDataPath{
		get {
			return ResDataPath+"/"+AssetFileTool.dynamicMainFest+"/";
		}
	}

	//更新版本动态资源目录
	public static string NewVersionDynamicResDataPath{
		get {
			return ResDataPath+"/"+AssetFileTool.dynamicMainFest+"/tmp/";
		}
	}

	public static string ResDataPath{
		get {
			#if UNITY_IOS
			return Application.persistentDataPath+"/res/ios/";
			#elif UNITY_ANDROID
			return Application.persistentDataPath+"/res/android/";
			#else
			return Application.persistentDataPath+"/res/pc/";
			#endif
		}
	}


	public static string GetBundleTargetName(){
			#if UNITY_ANDROID
			return "android";
			#elif UNITY_IPHONE
			return "ios";
			#else
			return "pc";
			#endif
	}



	public static string FixedPath(string sourcePath){


		while (sourcePath.IndexOf ('\\') >= 0) {
			sourcePath = sourcePath.Replace ('\\', '/');
		}
		while (sourcePath.IndexOf ("//") >=0) {
			sourcePath = sourcePath.Replace ("//", "/");
		}
		return sourcePath;

	}

}

